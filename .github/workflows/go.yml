name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: make build

    - name: Test
      run: make test

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29
        args: --config=.github/linters/golangci.yml

    - name: Codecov
      uses: codecov/codecov-action@v1.0.7
      with:
        file: coverage.out

  release:
    needs: build
#    if: github.event.pull_request.merged == 'true'
    name: Release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Compile
      run: make compile

    - uses: actions/upload-artifact@v2
      with:
        name: wanikani-cli
        path: bin/

    - name: Create new tag
      run: |
        git fetch --tags
        latest_version=$(git describe --tags --match "[0-9]*.[0-9]*.[0-9]*" --abbrev=0)
        version_array=( ${latest_version//./ } )
        ((version_array[1]++))
        version_array[2]=0
        new_version="${version_array[0]}.${version_array[1]}.${version_array[2]}"

        git config --global user.email "mdreem@fastmail.fm"
        git config --global user.name "Github Action"

        git tag -a ${new_version} -m ${new_version}
        git push origin ${new_version}
